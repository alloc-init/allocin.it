query pageQuery {
    ...LayoutQueryFragment
    postConnection {
        edges {
            node {
                id
                date
                title
                subtitle
                type
                excerpt
                author {
                    ... on Author {
                        ...AuthorParts
                    }
                }
                _sys {
                    filename
                }
            }
        }
    }
    researchConnection {
        edges {
            node {
                id
                date
                title
                subtitle
                type
                excerpt
                author {
                    ... on Author {
                        ...AuthorParts
                    }
                }
                filename
                _sys {
                    filename
                }
            }
        }
    }
}

# 1) A fragment for the Content block itself
fragment ContentBlockParts on PageBlocksContent {
    color
    columns {
        title
        items {
            icon {
                name
                style
                color
            }
            title
            # rich‚Äêtext is returned as JSON AST
            text
            date
            link
        }
    }
}

# 2) Update your contentQuery to pull in that fragment
query contentQuery($relativePath: String!) {
    ...LayoutQueryFragment
    page(relativePath: $relativePath) {
        ...PageParts
        # assuming your page uses a `blocks` union:
        blocks {
            __typename
            ...ContentBlockParts
        }
    }
}

query blogPostQuery($relativePath: String!) {
    ...LayoutQueryFragment
    post(relativePath: $relativePath) {
        ...PostParts
        author {
            ... on Author {
                name
                avatar
            }
        }
    }
}

query paperQuery($relativePath: String!) {
    ...LayoutQueryFragment
    research(relativePath: $relativePath) {
        ...ResearchParts
        author {
            ... on Author {
                name
                avatar
            }
        }
    }
}